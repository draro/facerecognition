{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","ImageLinkForm","onInputChange","onSubmit","type","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","alt","src","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signinPassword","onSubmitSigIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","href","Component","Register","onNameChange","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","res","count","Object","assign","catch","err","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48b0ea60.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign out</p>\r\n            </nav>)\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign in</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>)\r\n    }\r\n\r\n}\r\nexport default Navigation","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css'\r\n\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 35 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\"> </div>\r\n            </Tilt>\r\n        </div>)\r\n}\r\nexport default Logo","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'Davide will detect faces in your pics. Give it a try'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form pa4 br3 shadow-5 center'>\r\n                    <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange} />\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onSubmit} >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageLinkForm","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${name}, your current entry counts is ....`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Rank","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto' />\r\n                <div className='bounding-box' style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default FaceRecognition","import React, { Component } from 'react';\r\n// import './Signin.css'\r\n\r\nclass Signin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            signInEmail: '',\r\n            signinPassword: '',\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({ signInEmail: event.target.value })\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({ signinPassword: event.target.value })\r\n    }\r\n    onSubmitSigIn = () => {\r\n        fetch('https://desolate-cove-87201.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signinPassword\r\n            })\r\n        }).then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user)\r\n                    this.props.onRouteChange('home')\r\n                }\r\n            })\r\n\r\n    }\r\n    render() {\r\n\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    onChange={this.onEmailChange}\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={this.onPasswordChange}\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                onClick={this.onSubmitSigIn}\r\n                                type=\"submit\"\r\n                                value=\"Sign in\" />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p href=\"#0\" className=\"f6 link dim black db pointer\" onClick={() => onRouteChange('register')}>Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default Signin","import React, { Component } from 'react';\r\n// import './Register.css'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n        }\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n    onSubmitSigIn = () => {\r\n        fetch('https://desolate-cove-87201.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        }).then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user)\r\n                    this.props.onRouteChange('home')\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <article className=\"br3 ba  b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    onChange={this.onNameChange} />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\"\r\n                                    onChange={this.onEmailChange} />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={this.onPasswordChange} />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                onClick={this.onSubmitSigIn}\r\n                                type=\"submit\"\r\n                                value=\"Register\" />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\nexport default Register","import React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecgnition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Particles from 'react-particles-js';\n\nimport './App.css';\nimport { Component } from 'react';\nimport 'tachyons';\nimport Register from './components/Register/Register';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input })\n    fetch('https://desolate-cove-87201.herokuapp.com/imageUrl', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://desolate-cove-87201.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            })\n          })\n            .then(res => res.json())\n            .then(count => {\n              Object.assign(this.state.user, { entries: count })\n            }).catch(err => response.state(400).json(err))\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log('ERROR!!!!!!!', err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className='App'>\n        <Particles className='particles' params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        <Logo />\n        {route === 'home' ?\n          <div>\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit} />\n            <FaceRecgnition box={box} imageUrl={imageUrl} />\n          </div> :\n          (route === 'signin' ?\n            <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> :\n            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}